@using BookShop.Utility
@model IEnumerable<BookShop.Models.Book>
@inject SignInManager<ApplicationUser> SignInManager
@{
    ViewData["Title"] = "Książki";
}

@Html.Partial("_SecurityPartial")

<br />
<h2>Zarządzanie książkami</h2>
<br />

<p>
    @if (SignInManager.IsSignedIn(User) && User.IsInRole(StaticDetails.AdminUser))
     {
         <a class="btn btn-sm btn-primary" asp-action="Create">Utwórz</a>
     }
</p>
<br />

<form asp-action="Index" method="get" class="form-inline">
    <div class="input-group">
        <input name="search" class="form-control input-sm" placeholder="@ViewData["search"]" />
            <span class="input-group-btn">
                <input type="submit" value="Szukaj" class="btn btn-default btn-sm" />
            </span>
    </div>
</form>

<table class="table table-hover table-condensed" id="book_table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(m => m.Name)
        </th>
        <th>
            @Html.DisplayNameFor(m => m.Genre)
        </th>
        <th>
            @Html.DisplayNameFor(m => m.Year)
        </th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(m => item.Name)
            </td>
            <td>
                @Html.DisplayFor(m => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(m => item.Year)
            </td>
            <td>
                @if (SignInManager.IsSignedIn(User) && User.IsInRole(StaticDetails.AdminUser))
                {
                    <a asp-action="Edit" asp-route-id="@item.Id" id="edit_book" class="btn btn-primary btn-sm">Edytuj</a>
                    <a asp-action="Delete" asp-route-id="@item.Id" id="remove_book" class="btn btn-danger btn-sm">Usuń</a>
                }
                <a asp-action="Details" asp-route-id="@item.Id" id ="details_book"class="btn btn-info btn-sm">Szczegóły</a>
            </td>
        </tr>
    }
    </tbody>
   
</table>